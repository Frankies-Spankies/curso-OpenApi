openapi: '3.0.2'
info:
  title: First API
  version: '1.0'
  description:  Primer Api en OpenAPI
  termsOfService: http://example.com/terms/
  contact:
    name: Franki Panki
    url: http:frankipanki.com
    email: franki@McsPanki.com
  license:
    url: https://www.apache.org/licenses/LICENSE-2.0.html
    name: Apache 2.0
servers:
  - url: https://dev.example.com
    description: Development Server
  - url: https://qa.example.com
    description: QA Server
  - url: https://prod.example.com
    description: Production Server

paths:
  /v1/customers:
    get:
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CostumerList"

  /v1/beers:
    get:
      responses:
        '200':
          description: List of Beers
          content:
            application/json:
              schema:
                type: array
                description: Beer object
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      minLength: 2
                      maxLength: 200
                      example: XXLagger
                    style:
                      type: string
                      minLength: 2
                      maxLength: 8
                      enum:
                        - LAGGER
                        - ALE
                        - PALE_ALE
                        - IPA
                        - WHEAT
                    price:
                      type: number
                      format: float
                      minimum: 0 
                    quantityOnHand: 
                      type: integer
                      format: int64
                      minimum: 0     
                    upc:
                      type: number
                      format: upc
                    brewery:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 2
                          maxLength: 100
                          example: HEINEKEN
                        location:
                          type: string
                          minLength: 2
                          maxLength: 100
                          example: Mexico        
        '404':
          description: Not Beers found  

components:
  schemas:

    CostumerList:
      type: array
      minItems: 1
      maxItems: 100
      description: customer object
      items:
        $ref: "#/components/schemas/Customer"

    Adress:
      type: object
      properties:
        line1:
          type: string
          example: Avenida siempre viva
        city:
          type: string
          example: Springfield
        zipCode:
          type: string
          example: 9020010
        stateCode:
          type: string
          minLength: 2
          maxLength: 0
          description: Codigo de estado 2 letras
          # enum: [AL,AK,CA,AZ,AR]
          enum:
            - AL
            - AK
            - CA
            - AZ
            - AR

    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
          minLength: 2
          maxLength: 200
          example: frank
        lastName:
          type: string
          minLength: 2
          maxLength: 200
          example: spanki
        adress:
          $ref: "#/components/schemas/Adress"                                               